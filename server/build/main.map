{"version":3,"sources":["webpack:///webpack/bootstrap 7c47903eb0847272b7a7","webpack:///./src/index.js","webpack:///external \"apollo-server\"","webpack:///external \"uuid/v4\""],"names":["ApolloServer","gql","require","upsertItemInArray","array","item","index","slice","todos","id","title","completed","typeDefs","resolvers","Query","Mutation","addTodo","root","args","context","info","todo","uuidv4","push","markAsComplete","findIndex","x","Error","newTodo","server","debug","listen","then","url","console","log"],"mappings":";;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;AC7DA;AAAA;AAAA;AAAA,MAAM;AACJA,cADI;AAEJC;AAFI,IAGF,mBAAOC,CAAC,CAAR,CAHJ;AAIA;AACA;AACA;AACA;;AAEA,MAAMC,oBAAoB,CAACC,KAAD,EAAQC,IAAR,EAAcC,KAAd,KACxBA,QAAQ,CAAR,GACI,CAAC,GAAGF,KAAJ,EAAWC,IAAX,CADJ,GAEI,CAAC,GAAGD,MAAMG,KAAN,CAAY,CAAZ,EAAeD,KAAf,CAAJ,EAA2BD,IAA3B,EAAiC,GAAGD,MAAMG,KAAN,CAAYD,QAAQ,CAApB,CAApC,CAHN;;AAKA,IAAIE,QAAQ,CAAC;AACTC,MAAI,GADK;AAETC,SAAO,WAFE;AAGTC,aAAW;AAHF,CAAD,EAKV;AACEF,MAAI,GADN;AAEEC,SAAO,YAFT;AAGEC,aAAW;AAHb,CALU,CAAZ;;AAYA;AACA;AACA,MAAMC,WAAWX,GAAK;;;;;;;;;;;;;;;;;;;CAAtB;;AAqBA,MAAMY,YAAY;AAChB;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AACAC,SAAO;AACLN,WAAO,MAAMA;AADR,GAVS;AAahBO,YAAU;AACRC,aAAS,CAACC,IAAD,EAAOC,IAAP,EAAaC,OAAb,EAAsBC,IAAtB,KAA+B;AACtC,UAAIC,OAAO;AACTZ,YAAI,+CAAMa,EADD;AAETZ,eAAOQ,KAAKR,KAFH;AAGTC,mBAAW;AAHF,OAAX;AAKAH,YAAMe,IAAN,CAAWF,IAAX;AACA,aAAOb,KAAP;AACD,KATO;AAURgB,oBAAgB,CAACP,IAAD,EAAOC,IAAP,EAAaC,OAAb,EAAsBC,IAAtB,KAA+B;AAC7C,UAAId,QAAQE,MAAMiB,SAAN,CAAgBC,KAAKA,EAAEjB,EAAF,IAAQS,KAAKT,EAAlC,CAAZ;AACA,UAAGH,QAAQ,CAAX,EAAc;AACZ,cAAM,IAAIqB,KAAJ,CAAU,gBAAV,CAAN;AACD,OAFD,MAGK;AACH,YAAIN,OAAOb,MAAMF,KAAN,CAAX;AACA,YAAIsB,4BAAeP,IAAf;AACFV,qBAAWO,KAAKP;AADd,UAAJ;AAGAH,gBAAQL,kBAAkBK,KAAlB,EAAyBoB,OAAzB,EAAkCtB,KAAlC,CAAR;AACA,eAAOE,KAAP;AACD;AACF;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AA9BQ;AAbM,CAAlB;;AAgDA;AACA;AACA;AACA,MAAMqB,SAAS,IAAI7B,YAAJ,CAAiB;AAC9BY,UAD8B;AAE9BC,WAF8B;AAG9BiB,SAAM;AAHwB,CAAjB,CAAf;;AAMA;AACA;AACAD,OAAOE,MAAP,GAAgBC,IAAhB,CAAqB,CAAC;AACpBC;AADoB,CAAD,KAEf;AACJC,UAAQC,GAAR,CAAa,uBAAsBF,GAAI,EAAvC;AACD,CAJD,E;;;;;;AC5GA,0C;;;;;;ACAA,oC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7c47903eb0847272b7a7","const {\n  ApolloServer,\n  gql\n} = require('apollo-server');\nimport uuidv4 from 'uuid/v4';\n// This is a (sample) collection of books we'll be able to query\n// the GraphQL server for.  A more complete example might fetch\n// from an existing data source like a REST API or database.\n\nconst upsertItemInArray = (array, item, index) =>\n  index < 0\n    ? [...array, item]\n    : [...array.slice(0, index), item, ...array.slice(index + 1)];\n\nlet todos = [{\n    id: \"0\",\n    title: 'get money',\n    completed: false\n  },\n  {\n    id: \"1\",\n    title: 'make money',\n    completed: false\n  }\n]\n\n// Type definitions define the \"shape\" of your data and specify\n// which ways the data can be fetched from the GraphQL server.\nconst typeDefs = gql `\n  # Comments in GraphQL are defined with the hash (#) symbol.\n\n  # This \"Book\" type can be used in other type declarations.\n  type Todo {\n    id: String,\n    title: String,\n    completed: Boolean\n  }\n\n  # The \"Query\" type is the root of all GraphQL queries.\n  # (A \"Mutation\" type will be covered later on.)\n  type Query {\n    todos: [Todo]\n  }\n  type Mutation {\n    addTodo(title:String):  [Todo],\n    markAsComplete(id:String, completed:Boolean):  [Todo]\n  }\n`;\n\nconst resolvers = {\n  //Subscription: {\n    // todoAdded : {\n    //   subscribe: withFilter(() => pubsub.asyncIterator(['TODO_ADDED']),\n    //         (payload, variables) => {\n    //          return payload.todoAdded.id === variables.channelId;\n    //         },\n    //       ),\n    // },\n  //},\n  Query: {\n    todos: () => todos,\n  },\n  Mutation: {\n    addTodo: (root, args, context, info) => {\n      let todo = {\n        id: uuidv4(),\n        title: args.title,\n        completed: false\n      }\n      todos.push(todo);\n      return todos;\n    },\n    markAsComplete: (root, args, context, info) => {\n      let index = todos.findIndex(x => x.id == args.id);\n      if(index < 0) {\n        throw new Error(\"No todo found!\");\n      }\n      else {     \n        let todo = todos[index]; \n        let newTodo = { ...todo,\n          completed: args.completed\n        };\n        todos = upsertItemInArray(todos, newTodo, index);\n        return todos;\n      }\n    },\n    // addTodo: (root, args, context, info) => {\n    //   let index = channels.findIndex(x => x.id === args.channelId);\n    //   let newMessage = {id: uuidv4(), message: args.message };\n    //   channels[index].messages.push(newMessage);\n    //   pubsub.publish('MESSAGE_ADDED', { commentAddedToChannel: channels[index] });\n    //   return channels[index];\n    // }\n  }\n};\n\n\n// In the most basic sense, the ApolloServer can be started\n// by passing type definitions (typeDefs) and the resolvers\n// responsible for fetching the data for those types.\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers,\n  debug:false\n});\n\n// This `listen` method launches a web-server.  Existing apps\n// can utilize middleware options, which we'll discuss later.\nserver.listen().then(({\n  url\n}) => {\n  console.log(`ðŸš€  Server ready at ${url}`);\n});\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"apollo-server\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"apollo-server\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"uuid/v4\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"uuid/v4\"\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}